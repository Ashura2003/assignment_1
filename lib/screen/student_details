

class StudentDetailsScreen extends StatefulWidget {
  const StudentDetailsScreen({super.key});

  @override
  State<StudentDetailsScreen> createState() => _StudentDetailsScreenState();
}

class _StudentDetailsScreenState extends State<StudentDetailsScreen> {
  @override
  Widget build(BuildContext context) {
    String? firstName;
    String? lastName;
    String? address;
    List<Map<String, String>> studentsList = [];

    final formKey = GlobalKey<FormState>();

    return Scaffold(
      appBar: AppBar(
        title: const Text(
          "Student Details",
        ),
        backgroundColor: Colors.blueGrey,
      ),
      body: Padding(
        padding: const EdgeInsets.all(20),
        child: Form(
          key: formKey,
          child: Column(
            children: [
              MyTextFormField(
                onChanged: (value) {
                  firstName = value;
                },
                text: "Enter first name",
                keyboardType: TextInputType.name,
              ),
              MyTextFormField(
                onChanged: (value) {
                  lastName = value;
                },
                text: "Enter last name",
                keyboardType: TextInputType.name,
              ),
              MyTextFormField(
                onChanged: (value) {
                  address = value;
                },
                text: "Enter address",
                keyboardType: TextInputType.name,
              ),
              MyButton(
                onPressed: () {
                  if (formKey.currentState!.validate()) {
                    setState(() {
                      studentsList.add({
                        'fname': firstName!,
                        'lname': lastName!,
                        'address': address!,
                      });
                    });
                  }
                },
                text: "Save Details",
              ),
              Flexible(
                fit: FlexFit.loose,
                child: Container(
                  decoration: BoxDecoration(
                    border: Border.all(color: Colors.black),
                  ),
                  child: Expanded(
                    child: ListView.builder(
                      itemCount: studentsList.length,
                      itemBuilder: (context, index) {
                        final student = studentsList[index];
                        return ListTile(
                          leading: const CircleAvatar(
                            foregroundImage:
                                AssetImage('assets/images/image1.jpg'),
                          ),
                          title:
                              Text("${student['fname']} ${student['lname']}"),
                          subtitle: Text("${student['address']}"),
                        );
                      },
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
